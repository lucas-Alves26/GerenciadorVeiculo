<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSalvar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>