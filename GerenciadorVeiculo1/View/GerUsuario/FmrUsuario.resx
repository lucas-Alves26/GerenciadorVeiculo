<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAtualiza.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>